---

- hosts: raspi-tino

  vars:
    apt_packages:
      - git
      - weewx
      # pysqm dependencies
      - python-matplotlib
      # weewx dependencies
      - python-ephem
      - python-nacl
      - python-configobj
      - python-cheetah
      - python-pil
      - python-dev
      - python-pip

    # rclone_config_location: "/home/pi/.config/rclone/rclone.conf"
    # install_manpages: false
    # rclone_configs:
      # - name: dropbox
        # properties:
          # type: dropbox
          # token: "{{ dropbox_token }}"
      # - name: ionos-sftp
        # properties:
          # type: sftp
          # host: "{{ web_sftp_host }}"
          # user: "{{ web_sftp_user }}"
          # pass: "{{ web_sftp_pass }}"
          # port: 22

  # Este rol no funciona en raspberry. Instala la version de rclone para AMD64
  # TODO: instalar y configurar rclone. La version 1.52.1 funciona bien.
  #roles:
  #- stefangweichinger.ansible_rclone

  tasks:
    - name: Configure rclone
      copy:
        src: rclone.conf
        dest: /home/pi/.config/rclone/rclone.conf

    - name: Add weewx apt signing keys
      apt_key: url={{item}} state=present
      loop:
        - "http://weewx.com/keys/tkeffer.gpg.key"
        - "http://weewx.com/keys/mwall.gpg.key"

    - name: Add weewx apt repository
      apt_repository:
        repo: "deb [arch=all] http://weewx.com/apt/ squeeze main"
        state: present

    - name: Install some packages
      apt:
        name: "{{ apt_packages }}"

    ####################################################################
    #  weewx
    ####################################################################

    - name: Install weewx custom skin
      git:
        repo: https://github.com/juanmb/weewx-sofaskin.git
        dest: /etc/weewx/skins/Sofaskin
        force: yes
        version: el-observatoriu

    - name: Download weathercloud extension
      get_url:
        url: http://lancet.mit.edu/mwall/projects/weather/releases/weewx-wcloud-0.11.tgz
        dest: /home/pi/
      register: weathercloud

    - name: Install weathercloud extension
      command: wee_extension --install /home/pi/weewx-wcloud-0.11.tgz
      when: weathercloud.changed

    #- name: Install pysftp
      #pip:
        #name: pysftp

    #- name: Download SFTP extension
      #get_url:
        #url: https://github.com/matthewwall/weewx-sftp/archive/master.zip
        #dest: /home/pi/weewx-sftp.zip
      #register: sftp

    #- name: Install SFTP extension
      #command: wee_extension --install /home/pi/weewx-sftp.zip
      #when: sftp.changed

    - name: Create meteoclimatic template
      template:
        src: meteoclimatic.htm.tmpl.j2
        dest: /etc/weewx/skins/{{ weewx_skin }}/meteoclimatic.htm.tmpl

    - name: Create weewx configuration file
      template:
        src: weewx.conf.j2
        dest: /etc/weewx/weewx.conf
      notify: Restart weewx

    - name: Configure Weewx backup to Dropbox
      cron:
        user: pi
        name: "backup Weewx DB to Dropbox"
        minute: 5
        hour: 0
        job: "rclone sync -v /var/lib/weewx dropbox:weewx"

    - name: Configure Weewx transfer to Ionos server
      cron:
        user: pi
        name: "copy Weewx web to Ionos server"
        minute: "*/15"
        hour: "*"
        job: "rclone sync -v {{ weewx_dir}} ionos-sftp:{{ web_sftp_dir }}"

    ####################################################################
    #  PySQM
    ####################################################################

    - name: Install PySQM
      pip:
        name: https://github.com/juanmb/PySQM/archive/master.zip

    - name: Create PySQM data directory
      file:
        path: "{{ sqm_data_dir }}"
        state: directory

    - name: Create PySQM config directory
      file:
        path: "{{ sqm_conf_dir }}"
        state: directory

    - name: Create PySQM service file
      template:
        src: pysqm.service.j2
        dest: "/etc/systemd/system/pysqm.service"

    - name: Enable PySQM service
      systemd:
        name: pysqm
        daemon-reload: yes
        enabled: yes

    - name: Create PySQM configuration file
      template:
        src: pysqm_config.py.j2
        dest: "{{ sqm_conf_dir }}/config.py"
      notify: Restart pysqm

    # Hay que configurar el "remote" de rclone manualmente siguiendo las instrucciones en la web de rclone
    # El root_folder_id debe ser el ID de la carpeta sqm_vara en Google Drive
    - name: Configure PySQM backup to Drive
      cron:
        user: pi
        name: "backup PySQM data to Dropbox"
        minute: "*/30"
        hour: "22-12"
        job: "rclone sync -v {{ sqm_data_dir }} sqm-drive:"


  handlers:
    - name: Restart weewx
      service:
        name: weewx
        state: restarted

    - name: Restart pysqm
      service:
        name: pysqm
        state: restarted
